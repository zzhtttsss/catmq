syntax = "proto3";

option java_generic_services = true;
option java_multiple_files = true;
option java_package = "org.catmq.protocol.service";
option java_generate_equals_and_hash = true;
option java_string_check_utf8 = true;
import "definition.proto";

message SendMessage2BrokerRequest {
  Message message = 1;
  int64 producerId = 2;
  string topic = 3;
}

message SendMessage2BrokerResponse {
  bool ack = 1;
  string res = 2;
  Status status = 3;
}

message GetMessageFromBrokerRequest {
  string message = 1;
  string topic = 2;
  int64 consumerId = 3;
}

message GetMessageFromBrokerResponse {
  bool ack = 1;
  string res = 2;
  Status status = 3;
  bytes message = 4;
}

message SendMessage2StorerRequest {
  bytes body = 1;
}

message SendMessage2StorerResponse {
  bool ack = 1;
  string res = 2;
  Status status = 3;
}

message CreateTopicRequest {
  string topic = 1;
  int64 producerId = 2;
}

message CreateTopicResponse {
  bool ack = 1;
  string res = 2;
  Status status = 3;
}

message CreatePartitionRequest {
  string topic = 1;
  int32 partitionIndex = 2;
  string topicType = 3;
}

message CreatePartitionResponse {
  bool ack = 1;
  string res = 2;
  Status status = 3;
}


message CreateSegmentRequest {
  int64 segmentId = 1;
}

message CreateSegmentResponse {
  bool ack = 1;
  string res = 2;
  Status status = 3;
}

service BrokerService{
  rpc SendMessage2Broker (SendMessage2BrokerRequest) returns (SendMessage2BrokerResponse) {}
  rpc GetMessageFromBroker (GetMessageFromBrokerRequest) returns (GetMessageFromBrokerResponse) {}
  rpc CreateTopic (CreateTopicRequest) returns (CreateTopicResponse) {}
  rpc CreatePartition (CreatePartitionRequest) returns (CreatePartitionResponse) {}

}

service StorerService{
  rpc SendMessage2Storer (SendMessage2StorerRequest) returns (SendMessage2StorerResponse) {}
  rpc CreateSegment (CreateSegmentRequest) returns (CreateSegmentResponse) {}
}